objdump
라이브러리
컴파일된 오브젝트 모듈
공유 오브젝트 파일
독립 실행파일등의 바이너리 파일들의 정보

디버그 - 개발 단계 중 발생하는 시스템의 논리적인 오류나 비정상적 연산을 찾아내고 수정하는 과정

메모리 구조

코드 영역 - 실행할 코드가 저장
데이터 영역 - 전역 변수, 정적 변수 저장
스택 영역 - 함수의 호출과 관계되는 지역변수와 매개변수 저장

스택 프레임 - 스택 영역에 저장되는 함수의 호출 정보
함수 호출 -> 함수의 매개변수, 반환 주소 값, 함수에 선언된 지역 변수
이 순으로 저장되는 함수의 호출 정보(스택 프레임)
-> 이것을 통해 함수 호출이 끝난 뒤 해당 함수가 호출되기 이전 상태로 되돌아감

낮은 주소
-------------------
지역 변수
반환 주소 값
매게변수
-------------------
높은 주소

힙 영역 - 사용자가 직접 관리할 수 있는 메모리
사용자에 의해 메모리 공간이 동적으로 할당되고 해제
낮은 주소 -> 높은 주소로 할당

attackme setreuid가 걸려있음
프로세스 실행 중일때 설정한 권한으로 상승

x/32x $esp -> esp에서 32개의 16진수로 출력 

buf -> 256바이트
dummy -> 8바이트 (모르겠음)
SFP -> 4바이트
RET -> 4바이트

40 - 20 = 20(더미)
더미가 20바이트

256

RTL
